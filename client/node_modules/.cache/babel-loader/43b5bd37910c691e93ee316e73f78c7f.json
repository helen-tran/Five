{"ast":null,"code":"var _jsxFileName = \"/Users/helen-tran/Documents/Concordia-Bootcamp/Workshops/project-GROUP-e-commerce/client/src/components/Products/Products.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport SingleProduct from \"./SingleProduct\";\nimport { CircularProgress } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Products = () => {\n  _s();\n\n  // setting state\n  const [items, setItems] = useState(null);\n  const [companies, setCompanies] = useState(null);\n  const [products, setProducts] = useState([]); // importing all products\n\n  const findProducts = async () => {\n    const response = await fetch(\"/items\");\n    const data = await response.json();\n    setItems(data.data);\n  }; // importing company\n\n\n  const findCompanies = async () => {\n    const response = await fetch(\"/companies\");\n    const data = await response.json();\n    setCompanies(data.data);\n  }; // Calling data\n\n\n  useEffect(async () => {\n    await findProducts();\n    await findCompanies();\n  }, []);\n  let productsArray = [];\n\n  if (items && companies) {\n    // changing key name for the items to \"productName\" so it won't override with the companies \"name\" data. Since the keys are the same\n    const itemsProducts = items.map(_ref => {\n      let {\n        name: productName,\n        ...rest\n      } = _ref;\n      return {\n        productName,\n        ...rest\n      };\n    }); // merging items to the corresponding companies data set\n\n    let newArray = itemsProducts.map((element, index) => Object.assign({}, element, companies[index])); // productsArray.push(newArray);\n    // console.log(newArray, \"newArray\");\n    // alphabetical order\n\n    newArray.sort((a, b) => {\n      if (a.name < b.name) {\n        return -1;\n      }\n\n      if (a.name > b.name) {\n        return 1;\n      }\n\n      return 0;\n    });\n    setProducts(newArray);\n  } // console.log(productsArray[0]);\n\n\n  return /*#__PURE__*/_jsxDEV(PageWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column\",\n        children: /*#__PURE__*/_jsxDEV(PageTitle, {\n          children: \"Products\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), products.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Products, \"l6hJ45DPi6B0SLIKoiQvi9y3acY=\");\n\n_c = Products;\nconst PageWrapper = styled.div`\n  text-transform: uppercase;\n`;\n_c2 = PageWrapper;\nconst PageTitle = styled.h1`\n  font-size: 40px;\n`;\n_c3 = PageTitle;\nexport default Products;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Products\");\n$RefreshReg$(_c2, \"PageWrapper\");\n$RefreshReg$(_c3, \"PageTitle\");","map":{"version":3,"sources":["/Users/helen-tran/Documents/Concordia-Bootcamp/Workshops/project-GROUP-e-commerce/client/src/components/Products/Products.js"],"names":["React","useEffect","useState","styled","SingleProduct","CircularProgress","Products","items","setItems","companies","setCompanies","products","setProducts","findProducts","response","fetch","data","json","findCompanies","productsArray","itemsProducts","map","name","productName","rest","newArray","element","index","Object","assign","sort","a","b","length","PageWrapper","div","PageTitle","h1"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport SingleProduct from \"./SingleProduct\";\nimport { CircularProgress } from \"@mui/material\";\n\nconst Products = () => {\n  // setting state\n  const [items, setItems] = useState(null);\n  const [companies, setCompanies] = useState(null);\n  const [products, setProducts] = useState([]);\n\n  // importing all products\n  const findProducts = async () => {\n    const response = await fetch(\"/items\");\n    const data = await response.json();\n    setItems(data.data);\n  };\n\n  // importing company\n  const findCompanies = async () => {\n    const response = await fetch(\"/companies\");\n    const data = await response.json();\n    setCompanies(data.data);\n  };\n\n  // Calling data\n  useEffect(async () => {\n    await findProducts();\n    await findCompanies();\n  }, []);\n\n  let productsArray = [];\n  if (items && companies) {\n    // changing key name for the items to \"productName\" so it won't override with the companies \"name\" data. Since the keys are the same\n    const itemsProducts = items.map(({ name: productName, ...rest }) => ({\n      productName,\n      ...rest,\n    }));\n\n    // merging items to the corresponding companies data set\n    let newArray = itemsProducts.map((element, index) =>\n      Object.assign({}, element, companies[index])\n    );\n    // productsArray.push(newArray);\n    // console.log(newArray, \"newArray\");\n\n    // alphabetical order\n    newArray.sort((a, b) => {\n      if (a.name < b.name) {\n        return -1;\n      }\n      if (a.name > b.name) {\n        return 1;\n      }\n      return 0;\n    });\n    setProducts(newArray);\n  }\n  // console.log(productsArray[0]);\n  return (\n    <PageWrapper>\n      <section>\n        <div className=\"column\">\n          <PageTitle>Products</PageTitle>\n        </div>\n      </section>\n\n      {products.length > 0 ? (\n        <div className=\"grid\">\n          {/* {productsArray[0].map((product) => {\n            const productName = product.productName;\n            const price = product.price;\n            const img = product.imageSrc;\n            const companyId = product.companyId;\n            const _id = product._id;\n            const companyName = product.name;\n            return (\n              <SingleProduct\n                key={_id}\n                productName={productName}\n                price={price}\n                img={img}\n                companyName={companyName}\n                companyId={companyId}\n                _id={_id}\n              />\n            );\n          })} */}\n        </div>\n      ) : (\n        <CircularProgress />\n      )}\n    </PageWrapper>\n  );\n};\nconst PageWrapper = styled.div`\n  text-transform: uppercase;\n`;\nconst PageTitle = styled.h1`\n  font-size: 40px;\n`;\n\nexport default Products;\n"]},"metadata":{},"sourceType":"module"}