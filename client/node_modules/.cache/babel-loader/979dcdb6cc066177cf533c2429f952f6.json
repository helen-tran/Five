{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\"; //custom hook for relevant product details, company name and website\n\nconst useProductDetails = productId => {\n  _s();\n\n  const [productDetails, setProductDetails] = useState(null);\n  useEffect(() => {\n    // fetch company info\n    const fetchCompanyDetails = async companyID => {\n      const response = await fetch(`/companies/${companyID}`);\n      const resJSON = await response.json();\n      return resJSON.data;\n    }; // fetch product info\n\n\n    const fetchProductDetails = async productId => {\n      const response = await fetch(`/items/${productId}`);\n      const resJSON = await response.json();\n      const product = resJSON.data; // fetch company info for the product\n\n      const company = await fetchCompanyDetails(product.companyId); // create a new object that adds fields for the company name and company URL\n\n      const productDetailsObj = { ...product,\n        companyName: company.name,\n        companyUrl: company.url\n      }; // update the product details\n\n      setProductDetails(productDetailsObj);\n    }; // if there is a productId, run the fetchProductDetails function\n\n\n    if (productId) {\n      fetchProductDetails(productId);\n    } // cleanup\n\n\n    return () => {\n      setProductDetails(null);\n    };\n  }, [productId]);\n  return [productDetails, setProductDetails];\n};\n\n_s(useProductDetails, \"Ts5e3RYu7xDIHRdmZQuQbCS51X8=\");\n\nexport default useProductDetails;","map":{"version":3,"sources":["/Users/helen-tran/Documents/Concordia-Bootcamp/Portfolio/Five/client/src/hooks/use-product-details.hook.js"],"names":["useState","useEffect","useProductDetails","productId","productDetails","setProductDetails","fetchCompanyDetails","companyID","response","fetch","resJSON","json","data","fetchProductDetails","product","company","companyId","productDetailsObj","companyName","name","companyUrl","url"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC,C,CAEA;;AACA,MAAMC,iBAAiB,GAAIC,SAAD,IAAe;AAAA;;AACvC,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCL,QAAQ,CAAC,IAAD,CAApD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMK,mBAAmB,GAAG,MAAOC,SAAP,IAAqB;AAC/C,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,cAAaF,SAAU,EAAzB,CAA5B;AACA,YAAMG,OAAO,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAtB;AACA,aAAOD,OAAO,CAACE,IAAf;AACD,KAJD,CAFc,CAQd;;;AACA,UAAMC,mBAAmB,GAAG,MAAOV,SAAP,IAAqB;AAC/C,YAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAE,UAASN,SAAU,EAArB,CAA5B;AACA,YAAMO,OAAO,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAtB;AACA,YAAMG,OAAO,GAAGJ,OAAO,CAACE,IAAxB,CAH+C,CAK/C;;AACA,YAAMG,OAAO,GAAG,MAAMT,mBAAmB,CAACQ,OAAO,CAACE,SAAT,CAAzC,CAN+C,CAQ/C;;AACA,YAAMC,iBAAiB,GAAG,EACxB,GAAGH,OADqB;AAExBI,QAAAA,WAAW,EAAEH,OAAO,CAACI,IAFG;AAGxBC,QAAAA,UAAU,EAAEL,OAAO,CAACM;AAHI,OAA1B,CAT+C,CAe/C;;AACAhB,MAAAA,iBAAiB,CAACY,iBAAD,CAAjB;AACD,KAjBD,CATc,CA4Bd;;;AACA,QAAId,SAAJ,EAAe;AACbU,MAAAA,mBAAmB,CAACV,SAAD,CAAnB;AACD,KA/Ba,CAiCd;;;AACA,WAAO,MAAM;AACXE,MAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACD,KAFD;AAGD,GArCQ,EAqCN,CAACF,SAAD,CArCM,CAAT;AAuCA,SAAO,CAACC,cAAD,EAAiBC,iBAAjB,CAAP;AACD,CA3CD;;GAAMH,iB;;AA6CN,eAAeA,iBAAf","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\n//custom hook for relevant product details, company name and website\r\nconst useProductDetails = (productId) => {\r\n  const [productDetails, setProductDetails] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // fetch company info\r\n    const fetchCompanyDetails = async (companyID) => {\r\n      const response = await fetch(`/companies/${companyID}`);\r\n      const resJSON = await response.json();\r\n      return resJSON.data;\r\n    };\r\n\r\n    // fetch product info\r\n    const fetchProductDetails = async (productId) => {\r\n      const response = await fetch(`/items/${productId}`);\r\n      const resJSON = await response.json();\r\n      const product = resJSON.data;\r\n\r\n      // fetch company info for the product\r\n      const company = await fetchCompanyDetails(product.companyId);\r\n\r\n      // create a new object that adds fields for the company name and company URL\r\n      const productDetailsObj = {\r\n        ...product,\r\n        companyName: company.name,\r\n        companyUrl: company.url,\r\n      };\r\n\r\n      // update the product details\r\n      setProductDetails(productDetailsObj);\r\n    };\r\n\r\n    // if there is a productId, run the fetchProductDetails function\r\n    if (productId) {\r\n      fetchProductDetails(productId);\r\n    }\r\n\r\n    // cleanup\r\n    return () => {\r\n      setProductDetails(null);\r\n    };\r\n  }, [productId]);\r\n\r\n  return [productDetails, setProductDetails];\r\n};\r\n\r\nexport default useProductDetails;\r\n"]},"metadata":{},"sourceType":"module"}