{"ast":null,"code":"var _jsxFileName = \"/Users/helen-tran/Documents/Concordia-Bootcamp/Portfolio/Five/client/src/components/Products/Products.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport SingleProduct from \"./SingleProduct\";\nimport { CircularProgress } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Products = () => {\n  _s();\n\n  // setting state\n  const [items, setItems] = useState([]);\n  const [companies, setCompanies] = useState([]);\n  let productsArray = []; //Make two calls to API\n\n  useEffect(() => {\n    fetch(`/items`).then(res => res.json()).then(data => {\n      //Save items to useState\n      setItems(data.data); //The data from both API calls are dependent on one another for populating the product cards therefore the calls need to be made synchronous\n\n      return fetch(`/companies`).then(res => res.json()).then(data => {\n        //Save companies to useState\n        setCompanies(data.data);\n      });\n    });\n  }, []);\n\n  if (items.length > 0 && companies.length > 0) {\n    // changing key name (\"name\") inside items to \"productName\" so it won't override with the companies \"name\" data. Since the keys are the same\n    const itemsNameChange = items.map(_ref => {\n      let {\n        name: productName,\n        ...rest\n      } = _ref;\n      return {\n        productName,\n        ...rest\n      };\n    }); // changing key name (_id) inside items to \"productId\" so it won't override with companies \"_id\" data.\n\n    const itemsProducts = itemsNameChange.map(_ref2 => {\n      let {\n        _id: productId,\n        ...rest\n      } = _ref2;\n      return {\n        productId,\n        ...rest\n      };\n    }); // changing key name (_id) inside items to \"companyId\" so the data can cross reference with the data in itemsProducts\n\n    const companyArray = companies.map(_ref3 => {\n      let {\n        _id: companyId,\n        ...rest\n      } = _ref3;\n      return {\n        companyId,\n        ...rest\n      };\n    }); // merging items to the corresponding companies data set\n\n    const newArray = itemsProducts.map(item => ({ ...item,\n      ...companyArray.find(company => company.companyId === item.companyId)\n    }));\n    productsArray.push(newArray); // alphabetical order\n\n    newArray.sort((a, b) => {\n      if (a.name < b.name) {\n        return -1;\n      }\n\n      if (a.name > b.name) {\n        return 1;\n      }\n\n      return 0;\n    });\n    productsArray = newArray;\n  }\n\n  return /*#__PURE__*/_jsxDEV(PageWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column\",\n        children: [/*#__PURE__*/_jsxDEV(PageTitle, {\n          children: \"Products\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"sortBy\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"sortBy\",\n            selected: true,\n            disabled: true,\n            children: \"Sort By\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"saab\",\n            children: \"Brand A-Z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"opel\",\n            children: \"Brand Z-A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"audi\",\n            children: \"Price: High-Low\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"audi\",\n            children: \"Price: Low-High\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), productsArray.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid\",\n      children: productsArray.map(product => {\n        const productName = product.productName;\n        const price = product.price;\n        const img = product.imageSrc;\n        const productId = product.productId;\n        const companyName = product.name;\n        return /*#__PURE__*/_jsxDEV(SingleProduct, {\n          productName: productName,\n          price: price,\n          img: img,\n          companyName: companyName,\n          productId: productId\n        }, productId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(LoadingWrapper, {\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Products, \"v0tEN/8Q4H9mbW7VhciwcdvADgc=\");\n\n_c = Products;\nconst PageWrapper = styled.div`\n  text-transform: uppercase;\n`;\n_c2 = PageWrapper;\nconst PageTitle = styled.h1`\n  font-size: var(--font-size-big);\n`;\n_c3 = PageTitle;\nconst LoadingWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100px;\n`;\n_c4 = LoadingWrapper;\nconst Select = styled.select``;\nexport default Products;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Products\");\n$RefreshReg$(_c2, \"PageWrapper\");\n$RefreshReg$(_c3, \"PageTitle\");\n$RefreshReg$(_c4, \"LoadingWrapper\");","map":{"version":3,"sources":["/Users/helen-tran/Documents/Concordia-Bootcamp/Portfolio/Five/client/src/components/Products/Products.js"],"names":["React","useEffect","useState","styled","SingleProduct","CircularProgress","Products","items","setItems","companies","setCompanies","productsArray","fetch","then","res","json","data","length","itemsNameChange","map","name","productName","rest","itemsProducts","_id","productId","companyArray","companyId","newArray","item","find","company","push","sort","a","b","product","price","img","imageSrc","companyName","PageWrapper","div","PageTitle","h1","LoadingWrapper","Select","select"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport SingleProduct from \"./SingleProduct\";\nimport { CircularProgress } from \"@mui/material\";\n\nconst Products = () => {\n  // setting state\n  const [items, setItems] = useState([]);\n  const [companies, setCompanies] = useState([]);\n  let productsArray = [];\n\n  //Make two calls to API\n  useEffect(() => {\n    fetch(`/items`)\n      .then((res) => res.json())\n      .then((data) => {\n        //Save items to useState\n        setItems(data.data);\n\n        //The data from both API calls are dependent on one another for populating the product cards therefore the calls need to be made synchronous\n        return fetch(`/companies`)\n          .then((res) => res.json())\n          .then((data) => {\n            //Save companies to useState\n            setCompanies(data.data);\n          });\n      });\n  }, []);\n\n  if (items.length > 0 && companies.length > 0) {\n    // changing key name (\"name\") inside items to \"productName\" so it won't override with the companies \"name\" data. Since the keys are the same\n    const itemsNameChange = items.map(({ name: productName, ...rest }) => ({\n      productName,\n      ...rest,\n    }));\n    // changing key name (_id) inside items to \"productId\" so it won't override with companies \"_id\" data.\n    const itemsProducts = itemsNameChange.map(\n      ({ _id: productId, ...rest }) => ({\n        productId,\n        ...rest,\n      })\n    );\n    // changing key name (_id) inside items to \"companyId\" so the data can cross reference with the data in itemsProducts\n    const companyArray = companies.map(({ _id: companyId, ...rest }) => ({\n      companyId,\n      ...rest,\n    }));\n\n    // merging items to the corresponding companies data set\n    const newArray = itemsProducts.map((item) => ({\n      ...item,\n      ...companyArray.find((company) => company.companyId === item.companyId),\n    }));\n\n    productsArray.push(newArray);\n    // alphabetical order\n    newArray.sort((a, b) => {\n      if (a.name < b.name) {\n        return -1;\n      }\n      if (a.name > b.name) {\n        return 1;\n      }\n      return 0;\n    });\n\n    productsArray = newArray;\n  }\n\n  return (\n    <PageWrapper>\n      <section>\n        <div className=\"column\">\n          <PageTitle>Products</PageTitle>\n          <select name=\"sortBy\">\n            <option value=\"sortBy\" selected disabled>\n              Sort By\n            </option>\n            <option value=\"saab\">Brand A-Z</option>\n            <option value=\"opel\">Brand Z-A</option>\n            <option value=\"audi\">Price: High-Low</option>\n            <option value=\"audi\">Price: Low-High</option>\n          </select>\n        </div>\n      </section>\n      {productsArray.length > 0 ? (\n        <div className=\"grid\">\n          {productsArray.map((product) => {\n            const productName = product.productName;\n            const price = product.price;\n            const img = product.imageSrc;\n            const productId = product.productId;\n            const companyName = product.name;\n            return (\n              <SingleProduct\n                key={productId}\n                productName={productName}\n                price={price}\n                img={img}\n                companyName={companyName}\n                productId={productId}\n              />\n            );\n          })}\n        </div>\n      ) : (\n        <LoadingWrapper>\n          <CircularProgress />\n        </LoadingWrapper>\n      )}\n    </PageWrapper>\n  );\n};\nconst PageWrapper = styled.div`\n  text-transform: uppercase;\n`;\nconst PageTitle = styled.h1`\n  font-size: var(--font-size-big);\n`;\n\nconst LoadingWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100px;\n`;\n\nconst Select = styled.select``;\nexport default Products;\n"]},"metadata":{},"sourceType":"module"}